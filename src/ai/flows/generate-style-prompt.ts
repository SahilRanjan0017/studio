// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Generates a set of GenAI prompts for creating new images based on style analysis.
 *
 * - generateStylePrompts - A function that generates style prompts for image generation.
 * - GenerateStylePromptsInput - The input type for the generateStylePrompts function.
 * - GenerateStylePromptsOutput - The return type for the generateStylePrompts function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateStylePromptsInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of the reference image, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  styleAttributes: z.string().describe('The style attributes extracted from the image.'),
});
export type GenerateStylePromptsInput = z.infer<typeof GenerateStylePromptsInputSchema>;

const GenerateStylePromptsOutputSchema = z.object({
  prompts: z.array(z.string()).describe('A list of GenAI prompts for generating similar images.'),
});
export type GenerateStylePromptsOutput = z.infer<typeof GenerateStylePromptsOutputSchema>;

export async function generateStylePrompts(input: GenerateStylePromptsInput): Promise<GenerateStylePromptsOutput> {
  return generateStylePromptsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateStylePromptsPrompt',
  input: {schema: GenerateStylePromptsInputSchema},
  output: {schema: GenerateStylePromptsOutputSchema},
  prompt: `You are an expert style prompt engineer. Given an image and its analyzed style attributes, generate a list of 3 prompts that could be used to generate similar images.

Style Attributes:
{{styleAttributes}}

Reference Image: {{media url=photoDataUri}}

Respond with three prompts. The prompts must be appropriate for generating images.  The prompts should be creative and varied, exploring different aspects of the style. The prompts should be clear and specific enough to guide an image generation model.

Respond as a list of strings.
`,
});

const generateStylePromptsFlow = ai.defineFlow(
  {
    name: 'generateStylePromptsFlow',
    inputSchema: GenerateStylePromptsInputSchema,
    outputSchema: GenerateStylePromptsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
